const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
require('dotenv').config({ path: '.env.local' });

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
    process.exit(1);
  }
};

// –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ User
const User = require('../backend/models/User');

const createNoAccessUser = async () => {
  try {
    await connectDB();

    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞
    await User.deleteOne({ email: 'noaccess@test.com' });
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞');

    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const hashedPassword = await bcrypt.hash('noaccess123', 12);

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞—à–±–æ—Ä–¥—É
    const noAccessUser = {
      _id: new mongoose.Types.ObjectId('507f1f77bcf86cd799439999'),
      email: 'noaccess@test.com',
      password: hashedPassword,
      whatsappNumber: '+77771234999',
      firstName: '–ë–µ–∑',
      lastName: '–î–æ—Å—Ç—É–ø–∞',
      role: 'User',
      hasStudentAccess: false, // –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞—à–±–æ—Ä–¥—É
      isSchoolStudent: false,
      isEmailVerified: true,
      isWhatsappVerified: true,
      isActive: true,
      createdAt: new Date(),
      updatedAt: new Date()
    };

    await User.create(noAccessUser);

    console.log('‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞—à–±–æ—Ä–¥—É:');
    console.log('   Email: noaccess@test.com');
    console.log('   WhatsApp: +77771234999');
    console.log('   ID: 507f1f77bcf86cd799439999');
    console.log('   –†–æ–ª—å: User');
    console.log('   –î–æ—Å—Ç—É–ø –∫ –¥–∞—à–±–æ—Ä–¥—É: false');
    console.log('   –ü–∞—Ä–æ–ª—å: noaccess123');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  } finally {
    await mongoose.connection.close();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
  }
};

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  createNoAccessUser();
}

module.exports = createNoAccessUser;