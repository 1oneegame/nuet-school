const https = require('http');
const jwt = require('jsonwebtoken');
require('dotenv').config({ path: '.env.local' });

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π JWT —Ç–æ–∫–µ–Ω –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
const createAdminToken = () => {
  const payload = {
    userId: '507f1f77bcf86cd799439011', // –§–∏–∫—Ç–∏–≤–Ω—ã–π ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    email: 'admin@test.com',
    role: 'admin'
  };
  
  return jwt.sign(payload, process.env.JWT_SECRET, { expiresIn: '1h' });
};

const testAdminAPI = async () => {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint /api/admin/users...');
    
    const token = createAdminToken();
    console.log('‚úÖ JWT —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω');
    
    const options = {
      hostname: 'localhost',
      port: 3000,
      path: '/api/admin/users',
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      }
    };
    
    const req = https.request(options, (res) => {
      console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${res.statusCode}`);
      console.log(`üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:`, res.headers);
      
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        try {
          const response = JSON.parse(data);
          console.log('\nüìÑ –û—Ç–≤–µ—Ç API:');
          console.log(JSON.stringify(response, null, 2));
          
          if (response.users) {
            console.log(`\nüë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${response.users.length}`);
            response.users.forEach((user, index) => {
              console.log(`${index + 1}. ${user.email} (${user.role}) - –î–æ—Å—Ç—É–ø: ${user.hasStudentAccess ? '–î–∞' : '–ù–µ—Ç'}`);
            });
          }
        } catch (error) {
          console.log('\nüìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:');
          console.log(data);
        }
      });
    });
    
    req.on('error', (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    });
    
    req.end();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
};

testAdminAPI();