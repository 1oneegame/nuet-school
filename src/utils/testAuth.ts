import { authManager } from './authManager';

export const testAuthentication = () => {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
  
  const token = authManager.getToken();
  const user = authManager.getUser();
  const isAuth = authManager.isAuthenticated();
  
  console.log('üìù –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:');
  console.log('Token:', token ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  console.log('User:', user ? user.email : '–ù–µ –Ω–∞–π–¥–µ–Ω');
  console.log('Is Authenticated:', isAuth);
  
  if (token && typeof window !== 'undefined') {
    const localStorage_token = localStorage.getItem('token');
    const localStorage_user = localStorage.getItem('user');
    
    console.log('üíæ LocalStorage:');
    console.log('Token –≤ localStorage:', localStorage_token ? '–î–∞' : '–ù–µ—Ç');
    console.log('User –≤ localStorage:', localStorage_user ? '–î–∞' : '–ù–µ—Ç');
    
    const cookies = document.cookie.split(';');
    const tokenCookie = cookies.find(cookie => cookie.trim().startsWith('token='));
    
    console.log('üç™ Cookies:');
    console.log('Token cookie:', tokenCookie ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }
  
  return {
    hasToken: !!token,
    hasUser: !!user,
    isAuthenticated: isAuth,
    userRole: user?.role
  };
};

if (typeof window !== 'undefined') {
  (window as any).testAuth = testAuthentication;
}
