import React, { useState } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import VideoCourseManagement from '../../components/admin/VideoCourseManagement';
import NUETPracticeManagement from '../../components/admin/NUETPracticeManagement';
import CriticalThinkingManagement from '../../components/admin/CriticalThinkingManagement';
import UserManagement from '../../components/admin/UserManagement';
import AdminLogin from '../../components/admin/AdminLogin';
import useAdminAuth from '../../hooks/useAdminAuth';

interface Material {
  _id: string;
  title: string;
  originalName: string;
  description: string;
  category: string;
  fileSize: number;
  uploadDate: string;
  isVisible: boolean;
  filePath: string;
}

const AdminDashboard = () => {
  const router = useRouter();
  const { isAuthenticated, isLoading, user, login, logout } = useAdminAuth();
  const [activeSection, setActiveSection] = useState('overview');
  const [showCriticalThinkingModal, setShowCriticalThinkingModal] = useState(false);
  
  // States for file management
  const [materials, setMaterials] = useState<Material[]>([]);
  const [uploadFile, setUploadFile] = useState<File | null>(null);
  const [uploadTitle, setUploadTitle] = useState('');
  const [uploadDescription, setUploadDescription] = useState('');
  const [uploadCategory, setUploadCategory] = useState('document');
  const [isUploading, setIsUploading] = useState(false);
  const [uploadMessage, setUploadMessage] = useState('');
  const [isVisible, setIsVisible] = useState(true);

  // Functions for file management
  const fetchMaterials = async () => {
    try {
      const response = await fetch('/api/admin/materials');
      const data = await response.json();
      if (data.success) {
        setMaterials(data.data);
      }
    } catch (error) {
      console.error('Error fetching materials:', error);
    }
  };

  // Load materials when Other Content section is active
  React.useEffect(() => {
    if (activeSection === 'other-content') {
      fetchMaterials();
    }
  }, [activeSection]);

  const handleLogout = () => {
    logout();
  };

  const handleFileUpload = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (!uploadFile || !uploadTitle) {
      setUploadMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ');
      return;
    }

    setIsUploading(true);
    setUploadMessage('');

    const formData = new FormData();
    formData.append('file', uploadFile);
    formData.append('title', uploadTitle);
    formData.append('description', uploadDescription);
    formData.append('category', uploadCategory);
    formData.append('isVisible', isVisible.toString());

    try {
      const response = await fetch('/api/admin/materials', {
        method: 'POST',
        body: formData,
      });

      const data = await response.json();
      if (data.success) {
        setUploadMessage('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!');
        setUploadFile(null);
        setUploadTitle('');
        setUploadDescription('');
        setUploadCategory('document');
        setIsVisible(true);
        fetchMaterials(); // Refresh the list
        // Reset file input
        const fileInput = document.getElementById('file-upload') as HTMLInputElement;
        if (fileInput) fileInput.value = '';
      } else {
        setUploadMessage(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞');
      }
    } catch (error) {
      setUploadMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞');
      console.error('Upload error:', error);
    } finally {
      setIsUploading(false);
    }
  };

  const handleDeleteMaterial = async (materialId: string) => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª?')) {
      return;
    }

    try {
      const response = await fetch('/api/admin/materials', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ id: materialId }),
      });

      const data = await response.json();
      if (data.success) {
        fetchMaterials(); // Refresh the list
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞');
      }
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞');
      console.error('Delete error:', error);
    }
  };

  const formatFileSize = (bytes: number) => {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const menuItems = [
    { id: 'overview', title: '–û–±–∑–æ—Ä', icon: 'üìä' },
    { id: 'users', title: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', icon: 'üë•' },
    { id: 'video-courses', title: '–í–∏–¥–µ–æ–∫—É—Ä—Å—ã', icon: 'üé•' },
    { id: 'nuet-practice', title: 'NUET Practice', icon: 'üìù' },
    { id: 'critical-thinking', title: 'Critical Thinking', icon: 'üß†' },
    { id: 'other-content', title: 'Other Content', icon: 'üìÅ' },
    { id: 'settings', title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è' }
  ];

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...</p>
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  if (!isAuthenticated) {
    return <AdminLogin onLoginSuccess={login} />;
  }

  return (
    <>
      <Head>
        <title>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å - 240 School</title>
        <meta name="description" content="–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π 240 School" />
      </Head>

      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
        {/* Header */}
        <header className="bg-white shadow-lg border-b border-gray-200">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-4">
              <div className="flex items-center space-x-4">
                <div className="text-2xl font-bold text-indigo-600">240 SCHOOL</div>
                <div className="text-sm text-gray-500">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</div>
              </div>
              <div className="flex items-center space-x-4">
                <div className="text-sm text-gray-700">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</div>
                <button
                  onClick={handleLogout}
                  className="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition-colors"
                >
                  –í—ã–π—Ç–∏
                </button>
              </div>
            </div>
          </div>
        </header>

        <div className="flex">
          {/* Sidebar */}
          <aside className="w-64 bg-white shadow-lg min-h-screen">
            <nav className="mt-8">
              {menuItems.map((item) => (
                <button
                  key={item.id}
                  onClick={() => setActiveSection(item.id)}
                  className={`w-full flex items-center px-6 py-3 text-left hover:bg-indigo-50 transition-colors ${
                    activeSection === item.id ? 'bg-indigo-100 border-r-4 border-indigo-500 text-indigo-700' : 'text-gray-700'
                  }`}
                >
                  <span className="mr-3 text-xl">{item.icon}</span>
                  {item.title}
                </button>
              ))}
            </nav>
          </aside>

          {/* Main Content */}
          <main className="flex-1 p-8">
            {activeSection === 'overview' && (
              <div>
                <div className="mb-8">
                  <h1 className="text-3xl font-bold text-gray-900 mb-2">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å</h1>
                  <p className="text-gray-600">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤—Å–µ–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã 240 School</p>
                </div>

                {/* Stats Cards */}
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                  <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm font-medium text-gray-600">–í—Å–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤</p>
                        <p className="text-3xl font-bold text-indigo-600">1,247</p>
                      </div>
                      <div className="text-4xl">üë•</div>
                    </div>
                    <div className="mt-4">
                      <span className="text-green-500 text-sm font-medium">+12% –∑–∞ –º–µ—Å—è—Ü</span>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm font-medium text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—Å–æ–≤</p>
                        <p className="text-3xl font-bold text-green-600">24</p>
                      </div>
                      <div className="text-4xl">üìö</div>
                    </div>
                    <div className="mt-4">
                      <span className="text-green-500 text-sm font-medium">+3 –Ω–æ–≤—ã—Ö</span>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm font-medium text-gray-600">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤</p>
                        <p className="text-3xl font-bold text-blue-600">15,432</p>
                      </div>
                      <div className="text-4xl">‚úÖ</div>
                    </div>
                    <div className="mt-4">
                      <span className="text-green-500 text-sm font-medium">+8% –∑–∞ –Ω–µ–¥–µ–ª—é</span>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm font-medium text-gray-600">–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ù–£–ï–¢</p>
                        <p className="text-3xl font-bold text-purple-600">187</p>
                      </div>
                      <div className="text-4xl">üéØ</div>
                    </div>
                    <div className="mt-4">
                      <span className="text-green-500 text-sm font-medium">+5 –±–∞–ª–ª–æ–≤</span>
                    </div>
                  </div>
                </div>

                {/* Recent Activity */}
                <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                  <h2 className="text-xl font-bold text-gray-900 mb-4">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
                  <div className="space-y-4">
                    <div className="flex items-center space-x-4 p-4 bg-gray-50 rounded-lg">
                      <div className="text-2xl">üë§</div>
                      <div className="flex-1">
                        <p className="font-medium text-gray-900">–ù–æ–≤—ã–π —Å—Ç—É–¥–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è</p>
                        <p className="text-sm text-gray-600">–ê–π–¥–∞—Ä –ù—É—Ä–ª–∞–Ω–æ–≤ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</p>
                      </div>
                      <div className="text-sm text-gray-500">5 –º–∏–Ω –Ω–∞–∑–∞–¥</div>
                    </div>
                    <div className="flex items-center space-x-4 p-4 bg-gray-50 rounded-lg">
                      <div className="text-2xl">üìö</div>
                      <div className="flex-1">
                        <p className="font-medium text-gray-900">–ö—É—Ä—Å –æ–±–Ω–æ–≤–ª–µ–Ω</p>
                        <p className="text-sm text-gray-600">–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ"</p>
                      </div>
                      <div className="text-sm text-gray-500">1 —á–∞—Å –Ω–∞–∑–∞–¥</div>
                    </div>
                    <div className="flex items-center space-x-4 p-4 bg-gray-50 rounded-lg">
                      <div className="text-2xl">üéØ</div>
                      <div className="flex-1">
                        <p className="font-medium text-gray-900">–í—ã—Å–æ–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</p>
                        <p className="text-sm text-gray-600">–°—Ç—É–¥–µ–Ω—Ç –ø–æ–ª—É—á–∏–ª 215 –±–∞–ª–ª–æ–≤ –Ω–∞ –ø—Ä–æ–±–Ω–æ–º –ù–£–ï–¢</p>
                      </div>
                      <div className="text-sm text-gray-500">3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</div>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {activeSection === 'users' && (
              <div>
                <div className="mb-8">
                  <h1 className="text-3xl font-bold text-gray-900 mb-2">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h1>
                  <p className="text-gray-600">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –¥–æ—Å—Ç—É–ø–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</p>
                </div>
                <UserManagement />
              </div>
            )}

            {activeSection === 'video-courses' && (
              <VideoCourseManagement />
            )}

            {activeSection === 'nuet-practice' && (
              <NUETPracticeManagement />
            )}

            {activeSection === 'critical-thinking' && (
              <CriticalThinkingManagement />
            )}

            {activeSection === 'critical-thinking-old' && (
               <div>
                 <div className="mb-8">
                   <h1 className="text-3xl font-bold text-gray-900 mb-2">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Critical Thinking</h1>
                   <p className="text-gray-600">–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ</p>
                 </div>

                 <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                   {/* Create Question Section */}
                   <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                     <h2 className="text-xl font-bold text-gray-900 mb-4">üß† –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ</h2>
                     <div className="space-y-4">
                       <div>
                         <label className="block text-sm font-medium text-gray-700 mb-2">–¢–∏–ø –∑–∞–¥–∞–Ω–∏—è</label>
                         <select className="w-full border border-gray-300 rounded-lg px-3 py-2">
                           <option>–õ–æ–≥–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã</option>
                           <option>–ê–Ω–∞–ª–∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤</option>
                           <option>–ü—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏</option>
                           <option>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</option>
                         </select>
                       </div>
                       <div>
                         <label className="block text-sm font-medium text-gray-700 mb-2">–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏</label>
                         <select className="w-full border border-gray-300 rounded-lg px-3 py-2">
                           <option>–ë–∞–∑–æ–≤—ã–π</option>
                           <option>–°—Ä–µ–¥–Ω–∏–π</option>
                           <option>–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π</option>
                         </select>
                       </div>
                       <div>
                         <label className="block text-sm font-medium text-gray-700 mb-2">–¢–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è</label>
                         <textarea className="w-full border border-gray-300 rounded-lg px-3 py-2 h-32" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è..."></textarea>
                       </div>
                       <div>
                         <label className="block text-sm font-medium text-gray-700 mb-2">–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤</label>
                         <div className="space-y-2">
                           <input type="text" className="w-full border border-gray-300 rounded-lg px-3 py-2" placeholder="–í–∞—Ä–∏–∞–Ω—Ç A" />
                           <input type="text" className="w-full border border-gray-300 rounded-lg px-3 py-2" placeholder="–í–∞—Ä–∏–∞–Ω—Ç B" />
                           <input type="text" className="w-full border border-gray-300 rounded-lg px-3 py-2" placeholder="–í–∞—Ä–∏–∞–Ω—Ç C" />
                           <input type="text" className="w-full border border-gray-300 rounded-lg px-3 py-2" placeholder="–í–∞—Ä–∏–∞–Ω—Ç D" />
                         </div>
                       </div>
                       <div>
                         <label className="block text-sm font-medium text-gray-700 mb-2">–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç</label>
                         <select className="w-full border border-gray-300 rounded-lg px-3 py-2">
                           <option>A</option>
                           <option>B</option>
                           <option>C</option>
                           <option>D</option>
                         </select>
                       </div>
                       <div>
                         <label className="block text-sm font-medium text-gray-700 mb-2">–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞</label>
                         <textarea className="w-full border border-gray-300 rounded-lg px-3 py-2 h-24" placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ, –ø–æ—á–µ–º—É —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π..."></textarea>
                       </div>
                       <button className="w-full bg-purple-600 hover:bg-purple-700 text-white py-2 rounded-lg font-medium">–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ</button>
                     </div>
                   </div>

                   {/* Existing Questions */}
                   <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                     <h2 className="text-xl font-bold text-gray-900 mb-4">üìö –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞–Ω–∏—è</h2>
                     <div className="space-y-3 max-h-96 overflow-y-auto">
                       <div className="p-4 bg-gray-50 rounded-lg">
                         <div className="flex justify-between items-start mb-2">
                           <span className="text-sm font-medium text-purple-600">–õ–æ–≥–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã</span>
                           <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded">–ë–∞–∑–æ–≤—ã–π</span>
                         </div>
                         <p className="text-sm text-gray-700 mb-2">–ï—Å–ª–∏ –≤—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã –∏–∑—É—á–∞—é—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫—É, –∏ –ê–π–¥–∞—Ä - —Å—Ç—É–¥–µ–Ω—Ç...</p>
                         <div className="flex space-x-2">
                           <button className="text-blue-600 hover:text-blue-800 text-xs">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                           <button className="text-green-600 hover:text-green-800 text-xs">–û–±—ä—è—Å–Ω–µ–Ω–∏–µ</button>
                           <button className="text-red-600 hover:text-red-800 text-xs">–£–¥–∞–ª–∏—Ç—å</button>
                         </div>
                       </div>
                       <div className="p-4 bg-gray-50 rounded-lg">
                         <div className="flex justify-between items-start mb-2">
                           <span className="text-sm font-medium text-purple-600">–ê–Ω–∞–ª–∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤</span>
                           <span className="text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded">–°—Ä–µ–¥–Ω–∏–π</span>
                         </div>
                         <p className="text-sm text-gray-700 mb-2">–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –µ–≥–æ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã...</p>
                         <div className="flex space-x-2">
                           <button className="text-blue-600 hover:text-blue-800 text-xs">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                           <button className="text-green-600 hover:text-green-800 text-xs">–û–±—ä—è—Å–Ω–µ–Ω–∏–µ</button>
                           <button className="text-red-600 hover:text-red-800 text-xs">–£–¥–∞–ª–∏—Ç—å</button>
                         </div>
                       </div>
                     </div>
                   </div>
                 </div>

                 {/* Bulk Operations */}
                 <div className="mt-8 bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                   <h2 className="text-xl font-bold text-gray-900 mb-4">‚ö° –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</h2>
                   <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                     <div className="text-center">
                       <div className="text-3xl mb-2">üì§</div>
                       <h3 className="font-medium mb-2">–ò–º–ø–æ—Ä—Ç –∑–∞–¥–∞–Ω–∏–π</h3>
                       <p className="text-sm text-gray-600 mb-3">–ó–∞–≥—Ä—É–∑–∏—Ç–µ JSON —Ñ–∞–π–ª —Å –∑–∞–¥–∞–Ω–∏—è–º–∏</p>
                       <input type="file" accept=".json" className="hidden" id="import-questions" />
                       <label htmlFor="import-questions" className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg cursor-pointer text-sm">
                         –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                       </label>
                     </div>
                     <div className="text-center">
                       <div className="text-3xl mb-2">üì•</div>
                       <h3 className="font-medium mb-2">–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–¥–∞–Ω–∏–π</h3>
                       <p className="text-sm text-gray-600 mb-3">–°–∫–∞—á–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤ JSON</p>
                       <button className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm">
                         –°–∫–∞—á–∞—Ç—å
                       </button>
                     </div>
                     <div className="text-center">
                       <div className="text-3xl mb-2">üîÑ</div>
                       <h3 className="font-medium mb-2">–û–±–Ω–æ–≤–∏—Ç—å –æ–±—ä—è—Å–Ω–µ–Ω–∏—è</h3>
                       <p className="text-sm text-gray-600 mb-3">–ú–∞—Å—Å–æ–≤–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π</p>
                       <button className="bg-orange-600 hover:bg-orange-700 text-white px-4 py-2 rounded-lg text-sm">
                         –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                       </button>
                     </div>
                   </div>
                 </div>
               </div>
             )}







            {activeSection === 'other-content' && (
              <div>
                <div className="mb-8">
                  <h1 className="text-3xl font-bold text-gray-900 mb-2">Other Content</h1>
                  <p className="text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤</p>
                </div>

                <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100 mb-6">
                  <h2 className="text-xl font-bold text-gray-900 mb-6">–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª</h2>
                  
                  {uploadMessage && (
                    <div className={`mb-4 p-4 rounded-lg ${
                      uploadMessage.includes('—É—Å–ø–µ—à–Ω–æ') 
                        ? 'bg-green-100 text-green-700 border border-green-200' 
                        : 'bg-red-100 text-red-700 border border-red-200'
                    }`}>
                      {uploadMessage}
                    </div>
                  )}
                  
                  <form onSubmit={handleFileUpload} className="space-y-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ *</label>
                      <input
                        type="text"
                        value={uploadTitle}
                        onChange={(e) => setUploadTitle(e.target.value)}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"
                        required
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">–û–ø–∏—Å–∞–Ω–∏–µ</label>
                      <textarea
                        value={uploadDescription}
                        onChange={(e) => setUploadDescription(e.target.value)}
                        placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"
                        rows={3}
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                      <select 
                        value={uploadCategory}
                        onChange={(e) => setUploadCategory(e.target.value)}
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                      >
                        <option value="document">–î–æ–∫—É–º–µ–Ω—Ç</option>
                        <option value="video">–í–∏–¥–µ–æ</option>
                        <option value="audio">–ê—É–¥–∏–æ</option>
                        <option value="image">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</option>
                        <option value="other">–î—Ä—É–≥–æ–µ</option>
                      </select>
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">–§–∞–π–ª *</label>
                      <input
                        id="file-upload"
                        type="file"
                        onChange={(e) => setUploadFile(e.target.files?.[0] || null)}
                        required
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                      />
                    </div>
                    <div className="flex items-center">
                      <input
                        type="checkbox"
                        id="is-visible"
                        checked={isVisible}
                        onChange={(e) => setIsVisible(e.target.checked)}
                        className="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"
                      />
                      <label htmlFor="is-visible" className="ml-2 block text-sm text-gray-900">
                        –í–∏–¥–∏–º—ã–π –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
                      </label>
                    </div>
                    <button
                      type="submit"
                      disabled={isUploading}
                      className={`px-6 py-2 rounded-lg transition-colors ${
                        isUploading
                          ? 'bg-gray-400 cursor-not-allowed text-white'
                          : 'bg-indigo-600 hover:bg-indigo-700 text-white'
                      }`}
                    >
                      {isUploading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª'}
                    </button>
                  </form>
                </div>

                <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                  <h2 className="text-xl font-bold text-gray-900 mb-6">–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã ({materials.length})</h2>
                  
                  {materials.length === 0 ? (
                    <div className="text-center py-8">
                      <div className="text-4xl mb-4">üìÅ</div>
                      <p className="text-gray-500">–§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –≤—ã—à–µ.</p>
                    </div>
                  ) : (
                    <div className="overflow-x-auto">
                      <table className="min-w-full divide-y divide-gray-200">
                        <thead className="bg-gray-50">
                          <tr>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–†–∞–∑–º–µ—Ä</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–°—Ç–∞—Ç—É—Å</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–î–µ–π—Å—Ç–≤–∏—è</th>
                          </tr>
                        </thead>
                        <tbody className="bg-white divide-y divide-gray-200">
                          {materials.map((material) => (
                            <tr key={material._id}>
                              <td className="px-6 py-4 whitespace-nowrap">
                                <div className="text-sm font-medium text-gray-900">{material.title}</div>
                                <div className="text-sm text-gray-500">{material.originalName}</div>
                                {material.description && (
                                  <div className="text-sm text-gray-400 mt-1">{material.description}</div>
                                )}
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap">
                                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                                  material.category === 'document' ? 'bg-blue-100 text-blue-800' :
                                  material.category === 'video' ? 'bg-purple-100 text-purple-800' :
                                  material.category === 'audio' ? 'bg-green-100 text-green-800' :
                                  material.category === 'image' ? 'bg-yellow-100 text-yellow-800' :
                                  'bg-gray-100 text-gray-800'
                                }`}>
                                  {material.category === 'document' ? '–î–æ–∫—É–º–µ–Ω—Ç' :
                                   material.category === 'video' ? '–í–∏–¥–µ–æ' :
                                   material.category === 'audio' ? '–ê—É–¥–∏–æ' :
                                   material.category === 'image' ? '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' : '–î—Ä—É–≥–æ–µ'}
                                </span>
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                {formatFileSize(material.fileSize)}
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                {formatDate(material.uploadDate)}
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap">
                                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                                  material.isVisible ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                                }`}>
                                  {material.isVisible ? '–í–∏–¥–∏–º—ã–π' : '–°–∫—Ä—ã—Ç—ã–π'}
                                </span>
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <a
                                  href={material.filePath}
                                  target="_blank"
                                  rel="noopener noreferrer"
                                  className="text-indigo-600 hover:text-indigo-900 mr-3"
                                >
                                  –°–∫–∞—á–∞—Ç—å
                                </a>
                                <button 
                                  onClick={() => handleDeleteMaterial(material._id)}
                                  className="text-red-600 hover:text-red-900"
                                >
                                  –£–¥–∞–ª–∏—Ç—å
                                </button>
                              </td>
                            </tr>
                          ))}
                        </tbody>
                      </table>
                    </div>
                  )}
                </div>
              </div>
            )}

            {activeSection === 'settings' && (
              <div>
                <div className="mb-8">
                  <h1 className="text-3xl font-bold text-gray-900 mb-2">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h1>
                  <p className="text-gray-600">–ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</p>
                </div>

                <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                  <h2 className="text-xl font-bold text-gray-900 mb-6">–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                  <div className="space-y-6">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</label>
                      <input
                        type="text"
                        defaultValue="240 School"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">Email –ø–æ–¥–¥–µ—Ä–∂–∫–∏</label>
                      <input
                        type="email"
                        defaultValue="support@240school.kz"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ —Ç–µ—Å—Ç–∞</label>
                      <input
                        type="number"
                        defaultValue="3"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                      />
                    </div>
                    <div className="flex items-center">
                      <input
                        type="checkbox"
                        id="notifications"
                        defaultChecked
                        className="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"
                      />
                      <label htmlFor="notifications" className="ml-2 block text-sm text-gray-900">
                        –í–∫–ª—é—á–∏—Ç—å email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                      </label>
                    </div>
                    <button className="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2 rounded-lg transition-colors">
                      –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </button>
                  </div>
                </div>
              </div>
            )}
          </main>
        </div>
      </div>
      
      {/* Critical Thinking Management Modal */}
      {showCriticalThinkingModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-lg w-full max-w-7xl max-h-[90vh] overflow-hidden">
            <div className="flex justify-between items-center p-6 border-b">
              <h2 className="text-2xl font-bold text-gray-900">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è</h2>
              <button
                onClick={() => setShowCriticalThinkingModal(false)}
                className="text-gray-500 hover:text-gray-700 text-2xl font-bold"
              >
                √ó
              </button>
            </div>
            <div className="overflow-y-auto max-h-[calc(90vh-80px)]">
              <CriticalThinkingManagement />
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default AdminDashboard;